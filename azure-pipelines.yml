# This is a pipeline for deploying infrastructure with Terraform
# This pipeline will also be used to compile code and deploy a web app to resources created
# by Terraform
# Keep it secret....keep it safe

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
  - task: AzureKeyVault@1
    inputs:
      azureSubscription: 'TerraformConnect'
      KeyVaultName: 'webapp-kv-westus2'
      SecretsFilter: '*'
      RunAsPreJob: true
  
  - task: DownloadSecureFile@1
    name: mytfvars
    inputs:
      secureFile: 'terraform.tfvars'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(mytfvars.secureFilePath)'
      Contents: '**'
      TargetFolder: '$(Agent.BuildDirectory)'
  
  - task: TerraformInstaller@0
    inputs:
      terraformVersion: 'latest'
  - task: TerraformCLI@0
    inputs:
        command: 'init'
        backendType: 'azurerm'
        backendServiceArm: 'TerraformConnect'
        backendAzureRmResourceGroupName: 'webapp-terraconcept-westus2'
        backendAzureRmStorageAccountName: 'terrabackenddev'
        backendAzureRmContainerName: 'terrabackend'
        backendAzureRmKey: 'dev.terraform.tfstate'
        allowTelemetryCollection: true  
        
  - task: TerraformCLI@0
    inputs:
      command: 'plan'
      environmentServiceName: 'TerraformConnect'
      secureVarsFile: 'terraform.tfvars'
      commandOptions: '-out=devplan'
      allowTelemetryCollection: true
      publishPlanResults: 'webappplan'
  - task: ArchiveFiles@2
    inputs:
      rootFolderOrFile: '$(Agent.BuildDirectory)'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-tfplan.zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId)-tfplan.zip'
      ArtifactName: '$(Build.BuildId)-tfplan'
      publishLocation: 'Container'

  - task: DeleteFiles@1
    inputs:
      SourceFolder: '$(Agent.BuildDirectory)'
      Contents: '**'
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      artifactName: '$(Build.BuildId)-tfplan'
      downloadType: 'single'
      downloadPath: '$(System.ArtifactsDirectory)'